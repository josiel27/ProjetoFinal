/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelasBanzos;
import Controller.ControladorAluno;
import Utilitarios.ConexaoBanco;
import java.awt.Toolkit; // importação para setar o icone
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.PatternSyntaxException;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author jejo
 */
public class TelaManterAluno extends javax.swing.JFrame {
    ConexaoBanco conexao = new ConexaoBanco();
    ControladorAluno CA = new ControladorAluno();
    JPanel list;
    /**
     * Creates new form TelaNovoAluno
     */
    public TelaManterAluno() {                      
        initComponents();
        
//  Lista os planos na combo PLANOS  
        listarComboPlanos();
        
//  Seta no JPanel list o resultado de listar turmas, ao mesmo tempo lista as turmas na JPANEL do front      
        list = listarTurmas();
        botaoAlterarAluno.setVisible(false);
        botaoCancelar.setVisible(false);
        
//  lista os alunos na tabela 
        tbAlunos.setModel(CA.listarAlunos());
        
//  limpa todos os campos e coloca a ultima matricula para registro
        limpaCampos();
     
        conexao.desconecta();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("BanzosIcon.png")));//para setar um icone na janela
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEndAluno = new javax.swing.JTextField();
        txtCpfAluno = new javax.swing.JTextField();
        txtNomeAluno = new javax.swing.JTextField();
        txtTelAluno = new javax.swing.JTextField();
        txtEmailAluno = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        txtPesquisarAlunos = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        comboEstadoCivilAluno = new javax.swing.JComboBox();
        botaoSalvarAluno = new javax.swing.JButton();
        botaoAlterarAluno = new javax.swing.JButton();
        botaoCancelar4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbAlunos = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        comboPlanoAluno = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        txtRgAluno = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtDtNascAluno = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtMatriculaAluno = new javax.swing.JTextField();
        comboSexoAluno = new javax.swing.JComboBox();
        botaoSair = new javax.swing.JButton();
        botaoEditar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        painelTurmas = new javax.swing.JPanel();
        botaoCancelar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Alunos");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(null);

        txtEndAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEndAlunoActionPerformed(evt);
            }
        });
        getContentPane().add(txtEndAluno);
        txtEndAluno.setBounds(120, 130, 250, 30);
        getContentPane().add(txtCpfAluno);
        txtCpfAluno.setBounds(500, 50, 110, 30);
        getContentPane().add(txtNomeAluno);
        txtNomeAluno.setBounds(240, 50, 210, 30);
        getContentPane().add(txtTelAluno);
        txtTelAluno.setBounds(320, 90, 100, 30);
        getContentPane().add(txtEmailAluno);
        txtEmailAluno.setBounds(430, 130, 180, 30);

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/find.png"))); // NOI18N
        jToggleButton1.setBorderPainted(false);
        jToggleButton1.setContentAreaFilled(false);
        jToggleButton1.setFocusable(false);
        jToggleButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jToggleButton1.setRequestFocusEnabled(false);
        jToggleButton1.setRolloverEnabled(false);
        jToggleButton1.setVerifyInputWhenFocusTarget(false);
        getContentPane().add(jToggleButton1);
        jToggleButton1.setBounds(420, 360, 30, 30);

        txtPesquisarAlunos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtPesquisarAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarAlunosActionPerformed(evt);
            }
        });
        txtPesquisarAlunos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisarAlunosKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarAlunosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesquisarAlunosKeyTyped(evt);
            }
        });
        getContentPane().add(txtPesquisarAlunos);
        txtPesquisarAlunos.setBounds(330, 390, 160, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("CPF");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(470, 50, 40, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Plano");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(360, 170, 40, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/botton_banzos_icon2.png"))); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(500, 500));
        jLabel2.setMinimumSize(new java.awt.Dimension(500, 500));
        jLabel2.setPreferredSize(new java.awt.Dimension(500, 500));
        getContentPane().add(jLabel2);
        jLabel2.setBounds(640, 0, 160, 150);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jLabel1.setText("Novo Aluno");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 10, 150, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Nome");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(200, 50, 40, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Data Nascimento");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 90, 100, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Telefone");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(260, 90, 60, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Endereço");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(60, 130, 60, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Email");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(390, 130, 40, 30);

        jLabel17.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jLabel17.setText("Alunos Cadastrados");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(80, 390, 250, 30);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Pesquisar");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(370, 360, 60, 30);

        comboEstadoCivilAluno.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"Solteiro(a)", "Casado(a)", "Divorciado(a)"}));
        comboEstadoCivilAluno.setToolTipText("M");
        comboEstadoCivilAluno.setName("M"); // NOI18N
        comboEstadoCivilAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEstadoCivilAlunoActionPerformed(evt);
            }
        });
        getContentPane().add(comboEstadoCivilAluno);
        comboEstadoCivilAluno.setBounds(120, 170, 100, 30);
        comboEstadoCivilAluno.getAccessibleContext().setAccessibleName("");

        botaoSalvarAluno.setBackground(new java.awt.Color(0, 0, 0));
        botaoSalvarAluno.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botaoSalvarAluno.setForeground(new java.awt.Color(255, 255, 255));
        botaoSalvarAluno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_save.png"))); // NOI18N
        botaoSalvarAluno.setText("Salvar");
        botaoSalvarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarAlunoActionPerformed(evt);
            }
        });
        getContentPane().add(botaoSalvarAluno);
        botaoSalvarAluno.setBounds(220, 300, 110, 30);

        botaoAlterarAluno.setBackground(new java.awt.Color(0, 0, 0));
        botaoAlterarAluno.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botaoAlterarAluno.setForeground(new java.awt.Color(255, 255, 255));
        botaoAlterarAluno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_save.png"))); // NOI18N
        botaoAlterarAluno.setText("Salvar Alteração");
        botaoAlterarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarAlunoActionPerformed(evt);
            }
        });
        getContentPane().add(botaoAlterarAluno);
        botaoAlterarAluno.setBounds(180, 300, 190, 30);

        botaoCancelar4.setBackground(new java.awt.Color(0, 0, 0));
        botaoCancelar4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botaoCancelar4.setForeground(new java.awt.Color(255, 255, 255));
        botaoCancelar4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete.png"))); // NOI18N
        botaoCancelar4.setText("Excluir");
        botaoCancelar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelar4ActionPerformed(evt);
            }
        });
        getContentPane().add(botaoCancelar4);
        botaoCancelar4.setBounds(670, 390, 110, 30);

        tbAlunos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"001", "João Paul", "061.987.456-25", "QS08 Conj7 Cs05 Riacho Fundo I", "061 9641-7887", "joao@gmail.com", "Canto", null},
                {"002", "Gabriel Ricardo", "987.687.754.65", "QB7 Rua Guimarães Cs26", "061 8154-4454", "gab123@hotmail.com", "Violão", null},
                {"003", "Luana Alvez", "331.988.655-99", "CLS08 Conj42 Cs12", "061 8987-7441", "lualvez4@hotmail.com", "Violão", null},
                {"004", "Jessica Amorim", "132.454.885-74", "CNB05 Rua PedroNeto Cs20", "061 9865-4553", "jessica@gmail.com", "Bateria", null},
                {"005", "Ricardo Lima", "978.556.332-35", "QS7 Conj30 Cs12", "061 8365-5689", "lima@gmail.com", "Contrabaixo", null},
                {"006", "Paulo Augusto", "332.661.123-31", "CNL01 Rua Lopes CS31", "061 8754-3625", "Paul@gmail.com", "Guitarra", ""},
                {"007", "Lucas Neto", "055.314.789-94", "QNL8 Conj15 Cs08", "061 8145-6554", "Lucas@hotmail.com", "Piano", null},
                {"008", "Matheus Pereira", "056.954.354-30", "QNS4 Conj08 Cs11", "061 9487-8532", "Matheus789@hotmail.com", "Teclado", null},
                {"009", "Jonhy Alcantara", "078.852.369-00", "QLN12 Conj04 Cs03", "061 3396-2554", "Jonh123@hotmail.com", "Percussão", null},
                {"010", "Augostinho Cunha", "005.445.114-98", "CLK10 Rua Lima Cs09", "061 3399-7884", "augusto41@gmail.com", "Gaita", null},
                {"011", null, null, null, null, null, null, null}
            },
            new String [] {
                "Mat", "Nome", "CPF", "Endereço", "Telefone", "Email", "Instrumento", "Opções"
            }
        ));
        tbAlunos.setMaximumSize(new java.awt.Dimension(2147483647, 200000000));
        jScrollPane2.setViewportView(tbAlunos);
        if (tbAlunos.getColumnModel().getColumnCount() > 0) {
            tbAlunos.getColumnModel().getColumn(0).setResizable(false);
            tbAlunos.getColumnModel().getColumn(0).setPreferredWidth(25);
            tbAlunos.getColumnModel().getColumn(7).setPreferredWidth(120);
        }

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(20, 430, 760, 190);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Matrícula");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(60, 50, 70, 30);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Estado Civil");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(50, 170, 70, 30);

        comboPlanoAluno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
        getContentPane().add(comboPlanoAluno);
        comboPlanoAluno.setBounds(400, 170, 210, 30);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("RG");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(470, 90, 20, 30);
        getContentPane().add(txtRgAluno);
        txtRgAluno.setBounds(500, 90, 110, 30);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("Sexo");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(240, 170, 40, 30);
        getContentPane().add(txtDtNascAluno);
        txtDtNascAluno.setBounds(120, 90, 110, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Turma");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(70, 210, 40, 30);

        txtMatriculaAluno.setBackground(new java.awt.Color(204, 204, 204));
        txtMatriculaAluno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMatriculaAluno.setText("011");
        txtMatriculaAluno.setFocusable(false);
        getContentPane().add(txtMatriculaAluno);
        txtMatriculaAluno.setBounds(120, 50, 40, 30);

        comboSexoAluno.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"M", "F"}));
        comboSexoAluno.setToolTipText("M");
        comboSexoAluno.setName("M"); // NOI18N
        comboSexoAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSexoAlunoActionPerformed(evt);
            }
        });
        getContentPane().add(comboSexoAluno);
        comboSexoAluno.setBounds(280, 170, 50, 30);

        botaoSair.setBackground(new java.awt.Color(0, 0, 0));
        botaoSair.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botaoSair.setForeground(new java.awt.Color(255, 255, 255));
        botaoSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cancel.png"))); // NOI18N
        botaoSair.setText("Cancelar");
        botaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairActionPerformed(evt);
            }
        });
        getContentPane().add(botaoSair);
        botaoSair.setBounds(400, 300, 109, 30);

        botaoEditar.setBackground(new java.awt.Color(0, 0, 0));
        botaoEditar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botaoEditar.setForeground(new java.awt.Color(255, 255, 255));
        botaoEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_attach.png"))); // NOI18N
        botaoEditar.setText("Editar");
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoEditar);
        botaoEditar.setBounds(550, 390, 110, 30);

        painelTurmas.setBackground(new java.awt.Color(255, 255, 255));
        painelTurmas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        painelTurmas.setEnabled(false);
        painelTurmas.setFocusable(false);
        jScrollPane3.setViewportView(painelTurmas);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(120, 220, 490, 40);

        botaoCancelar.setBackground(new java.awt.Color(0, 0, 0));
        botaoCancelar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        botaoCancelar.setForeground(new java.awt.Color(255, 255, 255));
        botaoCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cancel.png"))); // NOI18N
        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoCancelar);
        botaoCancelar.setBounds(400, 300, 109, 30);

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 255));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jMenu1.setText("Cadastrar  |");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/user.png"))); // NOI18N
        jMenuItem1.setText("Aluno");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/user_gray.png"))); // NOI18N
        jMenuItem2.setText("Funcionário");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page.png"))); // NOI18N
        jMenuItem3.setText("Aproveitamento");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/music.png"))); // NOI18N
        jMenuItem4.setText("Instrumento");
        jMenu1.add(jMenuItem4);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group_key.png"))); // NOI18N
        jMenuItem5.setText("Perfil de Acesso");
        jMenu1.add(jMenuItem5);

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/money_add.png"))); // NOI18N
        jMenuItem6.setText("Planos de Matrícula");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group_add.png"))); // NOI18N
        jMenuItem7.setText("Turmas");
        jMenu1.add(jMenuItem7);

        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/money.png"))); // NOI18N
        jMenuItem8.setText("Situação de Pagamento");
        jMenu1.add(jMenuItem8);

        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/user_orange.png"))); // NOI18N
        jMenuItem9.setText("Situação de Matrícula");
        jMenu1.add(jMenuItem9);
        jMenu1.add(jSeparator1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Emitir  |");

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_attach.png"))); // NOI18N
        jMenuItem10.setText("Histórico Escolar");
        jMenu2.add(jMenuItem10);

        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_green.png"))); // NOI18N
        jMenuItem11.setText("Declaração");
        jMenu2.add(jMenuItem11);

        jMenuItem12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_go.png"))); // NOI18N
        jMenuItem12.setText("Certificado");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jMenu2.add(jSeparator2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Relatório  |");

        jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/table.png"))); // NOI18N
        jMenuItem13.setText("Aproveitamento");
        jMenu3.add(jMenuItem13);

        jMenuItem14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group.png"))); // NOI18N
        jMenuItem14.setText("Turmas");
        jMenu3.add(jMenuItem14);

        jMenuItem15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group_gear.png"))); // NOI18N
        jMenuItem15.setText("Professores");
        jMenu3.add(jMenuItem15);

        jMenuItem16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/music.png"))); // NOI18N
        jMenuItem16.setText("Alunos/Instrumentos");
        jMenu3.add(jMenuItem16);

        jMenuItem17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/money_delete.png"))); // NOI18N
        jMenuItem17.setText("Alunos Inadimplentes");
        jMenu3.add(jMenuItem17);

        jMenuItem18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/calendar.png"))); // NOI18N
        jMenuItem18.setText("Alunos/Dia");
        jMenu3.add(jMenuItem18);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(818, 688));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSalvarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarAlunoActionPerformed
        int matricula;
        String nome;
        String cpf;
        String rg;
        String telefone;
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String data_nascimento = sdf.format(new Date());
        String email;
        String endereco;
        int cod_sexo = 0;
        int cod_estado_civil = 0;
        int cod_situacao_matricula = 1;
        String plano_de_matricula = "";
        int cod_turma_periodo = 0;
        
        matricula = Integer.parseInt(txtMatriculaAluno.getText());
        nome = txtNomeAluno.getText();
        cpf = txtCpfAluno.getText();
        rg = txtRgAluno.getText();
        telefone = txtTelAluno.getText();
        data_nascimento = txtDtNascAluno.getText();
        email = txtEmailAluno.getText();
        endereco = txtEndAluno.getText();
        plano_de_matricula = comboPlanoAluno.getSelectedItem().toString(); 
        

        
//  Verifica se algum campo texto está vazio.    
        if (nome.equals("") || cpf.equals("") || rg.equals("") || telefone.equals("") || data_nascimento.equals("") || email.equals("") || endereco.equals("")){
            
            JOptionPane.showMessageDialog(null, "Preencha todos os campos obrigatórios!");
        
        }else{
//  Cria um objeto da classe ControladorAluno.
         ControladorAluno CA = new ControladorAluno();
        
//  Se for igual a 0, aparecera uma mensagem dizendo que as turmas não foram selecionadas
        if (pegarTurmasSelecionadas(list).size() == 0) {

        }else{
            
//  Verifica o cod da turma_periodo de cada turma            
            for (int u = 0; pegarTurmasSelecionadas(list).size() > u; u++){
                conexao.conecta();//inicia conexao com o BD          
                String sql= "SELECT T.cod_turma, TP.cod_turma_periodo\n" +
                            "FROM tb_turma T\n" +
                            "INNER JOIN rl_turma_periodo TP\n" +
                            "ON T.cod_turma = TP.cod_turma\n" +
                            "WHERE turma = '"+pegarTurmasSelecionadas(list).get(u)+"'";
                try {
                    conexao.SelectSQL(sql);
                    conexao.rs.next();
                    cod_turma_periodo = conexao.rs.getInt("cod_turma_periodo");

                    conexao.desconecta();
                    
//  Envia os parametros para o controlador inserir no BD                  
                    CA.IncluirTurmaAluno(matricula, cod_turma_periodo);
                    
                } catch (SQLException ex) {
                     JOptionPane.showMessageDialog(null, "Não foi possivel incluir as turmas selecionadas!");
                }            
            }
            conexao.desconecta();  //fecha conexao com o BD           
            
//  Verica o que está selecionado na combo sexo aluno e seta uma código para inserção no banco de dados.
            if (comboSexoAluno.getSelectedItem().toString().equals("M")){ // teste para passar o sexo para cod_sexo
                cod_sexo = 1;
            }
            if(comboSexoAluno.getSelectedItem().toString().equals("F")){
                cod_sexo = 2;
            }

//      Verica o que está selecionado na combo estado civil do aluno e seta um código para inserção no banco de dados.
            if (comboEstadoCivilAluno.getSelectedItem().toString().equals("Solteiro(a)")){ // teste para desconbri o setar um cod no estado civil
                cod_estado_civil = 1;
            }
            if(comboEstadoCivilAluno.getSelectedItem().toString().equals("Casado(a)")){
                cod_estado_civil = 2;
            }
            if(comboEstadoCivilAluno.getSelectedItem().toString().equals("Divorciado(a)")){
                cod_estado_civil = 3;
            }                          
      
//      Declara uma variavel pra receber o codigo do plano selecionado pelo usuário.
            int cod_plano = pesquisarComboPlanoSelecionado(plano_de_matricula);            

//      Envia os parametros para o controlador inserir no BD
            CA.IncluirAluno(matricula, nome, cpf, rg, telefone, data_nascimento, email, endereco, cod_sexo, cod_estado_civil, cod_situacao_matricula, cod_plano);   
                       
//      Atualiza a tabela e a matricula
            tbAlunos.setModel(CA.listarAlunos());//lista os alunos na tabela 
            txtMatriculaAluno.setText(Integer.toString(CA.pegarMatricula()));//seta no txt matricula o contagem de registros mais um                
            }
        }        
    }//GEN-LAST:event_botaoSalvarAlunoActionPerformed

    private void botaoCancelar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelar4ActionPerformed
        int[] L = tbAlunos.getSelectedRows();
        conexao.conecta();//inicia conexao com o BD   
         
        if (L.length == 1) {
            String mat = tbAlunos.getValueAt(L[0], 0)+"";            
            int m = Integer.parseInt(mat);
            
//  DELETA do relacionamento
            String sql = "DELETE FROM rl_aluno_turma WHERE matricula ="+m;
            conexao.ExecutaSQL(sql);//ExecutaSQL para não ter msg
            
//  DELETA da tabela alunos            
            sql = "DELETE FROM tb_aluno WHERE matricula ="+m;
            conexao.DeleteSQP(sql);            
        }
        
        conexao.desconecta();//fecha conexao com o BD
        
//  Atualiza a tabela e a matricula e limpa os campos
            tbAlunos.setModel(CA.listarAlunos());//lista os alunos na tabela 
            limpaCampos();
    }//GEN-LAST:event_botaoCancelar4ActionPerformed

    private void comboEstadoCivilAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEstadoCivilAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEstadoCivilAlunoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void txtEndAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEndAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEndAlunoActionPerformed

    private void comboSexoAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSexoAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSexoAlunoActionPerformed

    private void txtPesquisarAlunosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAlunosKeyPressed
 
    }//GEN-LAST:event_txtPesquisarAlunosKeyPressed

    private void txtPesquisarAlunosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAlunosKeyReleased

    }//GEN-LAST:event_txtPesquisarAlunosKeyReleased

    private void txtPesquisarAlunosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAlunosKeyTyped
        DefaultTableModel tabela_clientes = (DefaultTableModel) tbAlunos.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tabela_clientes);
        tbAlunos.setRowSorter(sorter);
        String text = txtPesquisarAlunos.getText();
        if (text.length() == 0)
        {
            sorter.setRowFilter(null);
        }
        else
        {
            try
            {
                sorter.setRowFilter(
                    RowFilter.regexFilter(text));
            }
            catch (PatternSyntaxException pse)
            {
                System.err.println("Erro");
            }
        }
    }//GEN-LAST:event_txtPesquisarAlunosKeyTyped

    private void botaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSairActionPerformed
        this.dispose();
        TelaHomeGerente THG = new TelaHomeGerente();
        THG.setVisible(true);
        
    }//GEN-LAST:event_botaoSairActionPerformed

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
        limpaCampos();//para limpar tudo até as turma selecionadas
        int[] L = tbAlunos.getSelectedRows();
        conexao.conecta();//inicia conexao com o BD   
         
        if (L.length == 1) {
            String mat = tbAlunos.getValueAt(L[0], 0)+"";            
            int m = Integer.parseInt(mat);
            String sql = "SELECT * FROM tb_aluno WHERE matricula ="+m;
            
            try {
                conexao.SelectSQL(sql);
                conexao.rs.next();
                
                txtMatriculaAluno.setText(conexao.rs.getString("matricula"));
                txtNomeAluno.setText(conexao.rs.getString("nome"));
                txtCpfAluno.setText(conexao.rs.getString("cpf"));
                txtRgAluno.setText(conexao.rs.getString("rg"));
                txtTelAluno.setText(conexao.rs.getString("telefone"));
                txtDtNascAluno.setText(conexao.rs.getString("data_nascimento"));
                txtEmailAluno.setText(conexao.rs.getString("email"));
                txtEndAluno.setText(conexao.rs.getString("endereco"));
                
                int cs = conexao.rs.getInt("cod_sexo");
                int ec = conexao.rs.getInt("cod_estado_civil");
                int pm = conexao.rs.getInt("cod_plano_matricula");

//  Se o código for 1 ou 2 ou 3 seta o item da combo referente ao sexo do aluno cadastrados
                if (cs == 1){
                    comboSexoAluno.setSelectedItem("M");
                }else if (cs == 2){
                    comboSexoAluno.setSelectedItem("F");
                }       

                if (ec == 1){
                    comboEstadoCivilAluno.setSelectedItem("Solteiro(a)");
                }else if (ec == 2){
                    comboEstadoCivilAluno.setSelectedItem("Casado(a)");
                }else if (ec == 3){
                    comboEstadoCivilAluno.setSelectedItem("Divorciado(a)");
                }
                
//  Select usado para achar o plano de matricula que o aluno esta cadastrado e depois setar na combo plano do aluno
                sql = "SELECT * FROM tb_plano_matricula WHERE cod_plano_matricula ="+pm;
                conexao.SelectSQL(sql);
                conexao.rs.next();
                String ac = conexao.rs.getString("plano_matricula") +" - R$ "+ conexao.rs.getString("valor");
                comboPlanoAluno.setSelectedItem(ac);
                
//  Select usado para achar as turmas que o aluno está matriculados
                sql =   "SELECT T.turma FROM rl_aluno_turma TA\n" +
                        "INNER JOIN rl_turma_periodo TP\n" +
                        "ON TA.cod_turma_periodo = TP.cod_turma_periodo\n" +
                        "INNER JOIN tb_turma T\n" +
                        "ON TP.cod_turma = T.cod_turma\n" +
                        "WHERE TA.matricula ="+m;
                conexao.SelectSQL(sql);
                
//  Condição para varrer a lista de turmas do bd que o aluno esta matriculado                
                while(conexao.rs.next()){
                    String s = conexao.rs.getString("turma");
                    JCheckBox a = new JCheckBox();   

//  Condição para selecionar as turmas que o aluno esta matriculado     
                    for (int n=0; list.getComponents().length > n; n++ ){
                       a = (JCheckBox) list.getComponent(n);
                       if(a.getName().equals(s)){
                        a.setSelected(true);
                       }
                    }
                }
                
//  Altera o botão salvar para dar update
                botaoSalvarAluno.setVisible(false);
                botaoAlterarAluno.setVisible(true);
//  Altera o botão sair para o botao cancelar a alteração                
                botaoCancelar.setVisible(true);
                botaoSair.setVisible(false);
                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao achar matricula do aluno! ");
            }            
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um campo na tabela para editar! ");
        }
        conexao.desconecta();//fecha conexao com o BD   
    }//GEN-LAST:event_botaoEditarActionPerformed

    private void txtPesquisarAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarAlunosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarAlunosActionPerformed

    private void botaoAlterarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarAlunoActionPerformed
        int matricula;
        String nome;
        String cpf;
        String rg;
        String telefone;
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String data_nascimento = sdf.format(new Date());
        String email;
        String endereco;
        int cod_sexo = 0;
        int cod_estado_civil = 0;
        int cod_situacao_matricula = 1;
        String plano_de_matricula = "";
        int cod_turma_periodo = 0;
        
        matricula = Integer.parseInt(txtMatriculaAluno.getText());
        nome = txtNomeAluno.getText();
        cpf = txtCpfAluno.getText();
        rg = txtRgAluno.getText();
        telefone = txtTelAluno.getText();
        data_nascimento = txtDtNascAluno.getText();
        email = txtEmailAluno.getText();
        endereco = txtEndAluno.getText();
        plano_de_matricula = comboPlanoAluno.getSelectedItem().toString(); 
        

        
//  Verifica se algum campo texto está vazio.    
        if (nome.equals("") || cpf.equals("") || rg.equals("") || telefone.equals("") || data_nascimento.equals("") || email.equals("") || endereco.equals("")){
            
            JOptionPane.showMessageDialog(null, "Preencha todos os campos obrigatórios!");
        
        }else{
//  Cria um objeto da classe ControladorAluno.
         ControladorAluno CA = new ControladorAluno();
        
//  Se for igual a 0, aparecera uma mensagem dizendo que as turmas não foram selecionadas
        if (pegarTurmasSelecionadas(list).size() == 0) {

        }else{
            
        conexao.conecta();//inicia conexao com o BD      
//  SQL para deletar todos o registros das turmas no sistemas e salvar um novo em cima          
        String sql= "DELETE FROM rl_aluno_turma WHERE matricula ="+matricula;        
//  Apaga as turma existente e registra uma nova no prox comando SQL    
        conexao.ExecutaSQL(sql);//executaSQL para ter mensagem
        conexao.desconecta();//fecha conexao com o BD         
//  Verifica o cod da turma_periodo de cada turma            
            for (int u = 0; pegarTurmasSelecionadas(list).size() > u; u++){                       
                conexao.conecta();//inicia conexao com o BD     
                       sql= "SELECT T.cod_turma, TP.cod_turma_periodo\n" +
                            "FROM tb_turma T\n" +
                            "INNER JOIN rl_turma_periodo TP\n" +
                            "ON T.cod_turma = TP.cod_turma\n" +
                            "WHERE turma = '"+pegarTurmasSelecionadas(list).get(u)+"'";
                try {
                    conexao.SelectSQL(sql);
                    conexao.rs.next();
                    cod_turma_periodo = conexao.rs.getInt("cod_turma_periodo");
                    
                    
                    conexao.desconecta();//fecha conexao com o BD   

//  Envia os parametros para o controlador inserir no BD                  
                    CA.AlterarTurmaAluno(matricula, cod_turma_periodo);
                    
                } catch (SQLException ex) {
                     JOptionPane.showMessageDialog(null, "Não foi possivel incluir as turmas selecionadas!");
                }            
            }
            conexao.desconecta();  //fecha conexao com o BD           
            
//  Verica o que está selecionado na combo sexo aluno e seta uma código para inserção no banco de dados.
            if (comboSexoAluno.getSelectedItem().toString().equals("M")){ // teste para passar o sexo para cod_sexo
                cod_sexo = 1;
            }
            if(comboSexoAluno.getSelectedItem().toString().equals("F")){
                cod_sexo = 2;
            }

//      Verica o que está selecionado na combo estado civil do aluno e seta um código para inserção no banco de dados.
            if (comboEstadoCivilAluno.getSelectedItem().toString().equals("Solteiro(a)")){ // teste para desconbri o setar um cod no estado civil
                cod_estado_civil = 1;
            }
            if(comboEstadoCivilAluno.getSelectedItem().toString().equals("Casado(a)")){
                cod_estado_civil = 2;
            }
            if(comboEstadoCivilAluno.getSelectedItem().toString().equals("Divorciado(a)")){
                cod_estado_civil = 3;
            }                          
      
//      Declara uma variavel pra receber o codigo do plano selecionado pelo usuário.
            int cod_plano = pesquisarComboPlanoSelecionado(plano_de_matricula);            

//      Envia os parametros para o controlador inserir no BD
            CA.AlterarAluno(matricula, nome, cpf, rg, telefone, data_nascimento, email, endereco, cod_sexo, cod_estado_civil, cod_situacao_matricula, cod_plano);   
           
//      Troca o botao Altera por Salvar
            botaoAlterarAluno.setVisible(false);
            botaoSalvarAluno.setVisible(true);            
            
//      Atualiza a tabela e a matricula
            tbAlunos.setModel(CA.listarAlunos());//lista os alunos na tabela 
            txtMatriculaAluno.setText(Integer.toString(CA.pegarMatricula()));//seta no txt matricula o contagem de registros mais um                
            limpaCampos();
            }
        }             
    }//GEN-LAST:event_botaoAlterarAlunoActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        botaoCancelar.setVisible(false);
        botaoSair.setVisible(true);
        botaoSalvarAluno.setVisible(true);
        botaoAlterarAluno.setVisible(false);
        limpaCampos();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaManterAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaManterAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaManterAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaManterAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaManterAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAlterarAluno;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoCancelar4;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoSair;
    private javax.swing.JButton botaoSalvarAluno;
    private javax.swing.JComboBox comboEstadoCivilAluno;
    private javax.swing.JComboBox comboPlanoAluno;
    private javax.swing.JComboBox comboSexoAluno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel painelTurmas;
    public javax.swing.JTable tbAlunos;
    private javax.swing.JTextField txtCpfAluno;
    private javax.swing.JTextField txtDtNascAluno;
    private javax.swing.JTextField txtEmailAluno;
    private javax.swing.JTextField txtEndAluno;
    private javax.swing.JTextField txtMatriculaAluno;
    private javax.swing.JTextField txtNomeAluno;
    private javax.swing.JFormattedTextField txtPesquisarAlunos;
    private javax.swing.JTextField txtRgAluno;
    private javax.swing.JTextField txtTelAluno;
    // End of variables declaration//GEN-END:variables

    private void listarComboPlanos() {
        conexao.conecta();//incia a conexao ao bd
        String sql = "select * from tb_plano_matricula";
        conexao.SelectSQL(sql);
        
         try {
            while (conexao.rs.next()) {
                comboPlanoAluno.addItem(conexao.rs.getString("plano_matricula") +" - R$ "+ conexao.rs.getString("valor"));
            }
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error ao listar instrumentos! ");
        }
        conexao.desconecta();//fecha a conexao
    }
    
        private int pesquisarComboPlanoSelecionado(String plano_de_matricula) {
        conexao.conecta();//incia a conexao ao bd
        int cod_plano = 1;
//      SQL para pesquisar o plano de matricula selecionado pelo usuário
        String sql1 = "SELECT * FROM tb_plano_matricula";
        conexao.SelectSQL(sql1);
            try {
                while (conexao.rs.next()) {
//      Verifica o codigo do item seleciona na combo pelo usuário e seta o cod referente ao plano escolhido.                
                    if (plano_de_matricula.equals(conexao.rs.getString("plano_matricula") +" - R$ "+ conexao.rs.getString("valor"))){
                        cod_plano = Integer.parseInt(conexao.rs.getString("cod_plano_matricula"));//converte para inteiro
                    }                
                }
            } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro,não foi possivel encontrar o plano de matricula selecionado! ");
            }
 
            conexao.desconecta();//fecha a conexao
            return cod_plano;       
    }

    private JPanel listarTurmas() {
        conexao.conecta();
        JCheckBox a = new JCheckBox();
        String sql = "SELECT turma FROM tb_turma";
        conexao.SelectSQL(sql);
        try {
            while (conexao.rs.next()) {
                a = new JCheckBox();
                a.setText(conexao.rs.getString("turma"));
                a.setName(conexao.rs.getString("turma")); 
                painelTurmas.add(a);                
            }
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error ao listar turmas! ");
        }      
        return painelTurmas;
    }
    
    private ArrayList pegarTurmasSelecionadas(JPanel list) { 
        JCheckBox a = new JCheckBox();   
        ArrayList turmas = new ArrayList();
        
//  Variavel boolean pra testar se alguma turma foi selecionada.
        boolean turmaSelecionada = false;
//  Condição para pegar e verificar se as caixa de seleção estão marcadas(selecionadas)      
        for (int n=0; list.getComponents().length > n; n++ ){
           a = (JCheckBox) list.getComponent(n);
           if (a.isSelected()){
               turmas.add(a.getText());
               turmaSelecionada = true;
           }
        }
        if(turmaSelecionada == false){
            JOptionPane.showMessageDialog(null, "Nenhuma turma foi selecionada!");
        }
        return turmas;
    }

    private void limpaCampos() {
//  Seta no txt matricula o contagem de registros mais um
        txtMatriculaAluno.setText(Integer.toString(CA.pegarMatricula()));
        txtCpfAluno.setText("");
        txtNomeAluno.setText("");
        txtTelAluno.setText("");
        txtEmailAluno.setText("");
        txtEndAluno.setText("");
        txtRgAluno.setText("");
        txtDtNascAluno.setText("");

        for (int n=0; list.getComponents().length > n; n++ ){
            JCheckBox a = (JCheckBox) list.getComponent(n);
            a.setSelected(false);
        }        
    }
}
